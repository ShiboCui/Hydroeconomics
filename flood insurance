%%%%%cal CCs%%%%%
losscorr=corr(loss','type','Pearson');

%%%%%cal risk reserves%%%%%
rows = size(loss, 1); 
EL = zeros(rows, 1);
STL = zeros(rows, 1);
p = zeros(rows, 1);
for i = 1:rows
    row = loss(i, :);
    non_zero_elements = row(row ~= 0); 
    non_zero_count = length(non_zero_elements); 
    if non_zero_count > 0
        EL(i) = mean(non_zero_elements);
        STL(i) = std(non_zero_elements);
    else
        EL(i) = NaN;
        STL(i) = NaN;
    end
    p(i) = non_zero_count / length(row);
end

for j=1:1:9
    NEL=log(EL(j))-0.5*log(1+STL(j)^2/EL(j)^2);
    NSTL=(log(1+STL(j)^2/EL(j)^2))^0.5;
    funlog=@(L) (p(j)*lognpdf(L,NEL,NSTL));
    L200(j)= fzero(@(z)(integral(funlog,0,z)-p(j)+0.005),0.05);
end
L200=L200';

%%%%%cal premium with Shapley value%%%%%
az=9;
    bz=az-1;
    a1=0.85;
    a2=0.25;
    for k = 1:az
        loss = loss([2:end, 1], :); % 
    
    vectors = dec2bin(0:2^bz-1) - '0';
    
    for i=1:(2^bz)
    lossa=loss(1:bz,:).*vectors(i,:)';
    lossb=sum(lossa,1);
    stdb=a1*(mean(lossb)+a2*std(lossb));
    stdc=a1*(mean(lossb+loss(az,:))+a2*std(lossb+loss(az,:)));
    num(i)=sum(vectors(i,:));
    sp(i)=stdc-stdb;
    end

    numa = zeros(1, 2^bz-1); % Initialize numa to store the results
    
    for i=1:(2^bz)
        for j=0:bz
        if num(i)==j
            numa(i)=factorial(j) * factorial(bz-j);
        end
       end
    end

    sharpley1(k)=sum((numa.*sp))/(factorial(az));
    end
    a=sharpley1';
    b=sp';

%%%%%test CGT conditions%%%%%
    az=9;
    sharpley1=PM0';

    vectors = dec2bin(0:2^az-1) - '0';
    for i=1:2^az
    lossa=loss(1:az,:).*vectors(i,:)';
    lossb=sum(lossa,1);
    stdb(i)=0.85*(mean(lossb)+0.25*std(lossb));
    stdc(i)=sharpley1*vectors(i,:)';
    test(i)=stdc(i)-stdb(i);
    end
    z=max(test);
    [maxValue, maxIndex] = max(test);
    a1=vectors(maxIndex,:);  
    A0=-test';

%%%%% risk aversion cal %%%%%
for j=1:30
    for i=1:500
    EL =mean(loss(j,:));  
    STL = std(loss(j,:));  
    A = max(loss(j,:));
    Pm = PM0(j);  
    
    NEL=log(EL)-0.5*log(1+STL^2/EL^2);
    NSTL=(log(1+STL^2/EL^2))^0.5;
    p_L=@(L) lognpdf(L,NEL,NSTL);
    
    b = 0.01*i;  
    U = @(x) x.^(1-b)/(1-b); 
      
    L_max = A-0.01;  
    L_min = 0.01; 
      
    UW_value = integral(@(L) U(A-L) .* p_L(L), L_min, L_max);  
    UY_value = integral(@(L) U(A-0.1*L-Pm) .* p_L(L), L_min, L_max);  
      
    pan(i)=UY_value-UW_value;
    end
    panbie(:,j)=pan';
    end

%%%%% willingness cal %%%%%
    mu = 0;     
    sigma = 1;  
    P = 1 - normcdf(A, mu, sigma);

